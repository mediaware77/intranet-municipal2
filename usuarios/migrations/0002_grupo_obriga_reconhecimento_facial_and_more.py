# Generated by Django 4.2.7 on 2025-08-26 22:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('usuarios', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='grupo',
            name='obriga_reconhecimento_facial',
            field=models.BooleanField(default=False, help_text='Usuários deste grupo devem usar reconhecimento facial para autenticação', verbose_name='Obriga Reconhecimento Facial'),
        ),
        migrations.AddField(
            model_name='grupo',
            name='permite_uso_reconhecimento_facial',
            field=models.BooleanField(default=False, help_text='Usuários deste grupo podem usar reconhecimento facial', verbose_name='Permite Reconhecimento Facial'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='data_cadastro_facial',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Data de Cadastro Facial'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='face_encoding',
            field=models.BinaryField(blank=True, help_text='Dados biométricos faciais criptografados', null=True, verbose_name='Encoding Facial'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='foto_perfil_facial',
            field=models.ImageField(blank=True, null=True, upload_to='faces/%Y/%m/', verbose_name='Foto de Referência Facial'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='permite_reconhecimento_facial',
            field=models.BooleanField(default=False, help_text='Permissão administrativa para usar reconhecimento facial', verbose_name='Permite Reconhecimento Facial'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='reconhecimento_facial_ativo',
            field=models.BooleanField(default=False, help_text='Se o usuário tem reconhecimento facial cadastrado e ativo', verbose_name='Reconhecimento Facial Ativo'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='tentativas_falhas_facial',
            field=models.IntegerField(default=0, verbose_name='Tentativas Falhas de Reconhecimento'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='ultimo_acesso_facial',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Último Acesso via Reconhecimento Facial'),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='grupo_primario',
            field=models.ForeignKey(help_text='Setor principal do usuário (obrigatório)', on_delete=django.db.models.deletion.CASCADE, related_name='usuarios_primarios', to='usuarios.grupo', verbose_name='Setor Principal'),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='grupos_secundarios',
            field=models.ManyToManyField(blank=True, help_text='Setores adicionais do usuário (opcional)', related_name='usuarios_secundarios', to='usuarios.grupo', verbose_name='Setores Secundários'),
        ),
        migrations.CreateModel(
            name='RegistroAcessoFacial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_hora', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data e Hora')),
                ('tipo_acesso', models.CharField(choices=[('entrada', 'Entrada'), ('saida', 'Saída'), ('tentativa_falha', 'Tentativa Falha'), ('cadastro', 'Cadastro Facial'), ('atualizacao', 'Atualização Facial')], max_length=20, verbose_name='Tipo de Acesso')),
                ('confianca', models.DecimalField(blank=True, decimal_places=2, help_text='Percentual de confiança no reconhecimento', max_digits=5, null=True, verbose_name='Confiança (%)')),
                ('foto_capturada', models.ImageField(upload_to='acessos/%Y/%m/%d/', verbose_name='Foto Capturada')),
                ('ip_origem', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP de Origem')),
                ('sucesso', models.BooleanField(default=False, verbose_name='Sucesso')),
                ('observacoes', models.TextField(blank=True, help_text='Detalhes adicionais do acesso', verbose_name='Observações')),
                ('dispositivo', models.CharField(blank=True, help_text='Informações do dispositivo usado', max_length=200, verbose_name='Dispositivo')),
                ('usuario', models.ForeignKey(blank=True, help_text='Usuário identificado (null se falha na identificação)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='registros_faciais', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Registro de Acesso Facial',
                'verbose_name_plural': 'Registros de Acesso Facial',
                'ordering': ['-data_hora'],
                'indexes': [models.Index(fields=['-data_hora'], name='usuarios_re_data_ho_0758b4_idx'), models.Index(fields=['usuario', '-data_hora'], name='usuarios_re_usuario_5d735b_idx'), models.Index(fields=['tipo_acesso', 'sucesso'], name='usuarios_re_tipo_ac_a7a3e1_idx')],
            },
        ),
    ]
